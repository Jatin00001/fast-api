# FastAPI Environment Configuration
# Copy this file to .env and update the values according to your setup

# =================================
# APPLICATION SETTINGS
# =================================
PROJECT_NAME="FastAPI App"
VERSION="1.0.0"
API_PREFIX="/api/v1"
DEBUG_MODE=true
HOST="0.0.0.0"
PORT=8000

# =================================
# CORS SETTINGS
# =================================
ALLOWED_ORIGINS="http://localhost:3000,http://127.0.0.1:3000,http://localhost:8000,http://127.0.0.1:8000"

# =================================
# DATABASE CONFIGURATION
# =================================
DATABASE_URL="postgresql+asyncpg://postgres:your_password@localhost:5432/your_database_name"

# For Docker Compose
POSTGRES_USER=postgres
POSTGRES_PASSWORD=your_password
POSTGRES_DB=your_database_name

# =================================
# SECURITY SETTINGS
# =================================
SECRET_KEY="your-secret-key-change-this-in-production-use-openssl-rand-hex-32"
ALGORITHM="HS256"
ACCESS_TOKEN_EXPIRE_MINUTES=30

# =================================
# AWS CONFIGURATION (Optional)
# =================================
AWS_ACCESS_KEY_ID=your_aws_access_key_id
AWS_SECRET_ACCESS_KEY=your_aws_secret_access_key
AWS_REGION=us-east-1
AWS_S3_BUCKET=your-s3-bucket-name

# =================================
# GOOGLE CLOUD CONFIGURATION (Optional)
# =================================
GOOGLE_APPLICATION_CREDENTIALS=/path/to/your/service-account-key.json
GCP_PROJECT_ID=your-gcp-project-id
GCP_BUCKET_NAME=your-gcp-bucket-name

# =================================
# SSL/HTTPS CONFIGURATION (Optional)
# =================================
SSL_KEYFILE=/path/to/ssl/keyfile.pem
SSL_CERTFILE=/path/to/ssl/certfile.pem

# =================================
# DEVELOPMENT NOTES
# =================================
# 1. Copy this file to .env and fill in your actual values
# 2. Never commit your actual .env file to version control
# 3. For production, use more secure secret keys
# 4. Generate secret key with: openssl rand -hex 32
# 5. Ensure your cloud storage buckets exist before testing uploads 