version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: fastapi_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: fastapi_app_db
      POSTGRES_USER: fastapi_user
      POSTGRES_PASSWORD: SecureFastAPI2024!
      POSTGRES_INITDB_ARGS: "--encoding=UTF8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    ports:
      - "5434:5432"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fastapi_user -d fastapi_app_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI Application
  web:
    build: .
    container_name: fastapi_app
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - DEBUG_MODE=true
      - DATABASE_URL=postgresql+asyncpg://fastapi_user:SecureFastAPI2024!@db:5432/fastapi_app_db
      - SECRET_KEY=your-super-secret-key-change-in-production-min-32-chars
      - ACCESS_TOKEN_EXPIRE_MINUTES=60
      - ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000,http://localhost:8000,http://127.0.0.1:8000
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    volumes:
      - ./app:/app/app:ro
      - ./main.py:/app/main.py:ro
    command: ["sh", "-c", "sleep 10 && uvicorn main:app --host 0.0.0.0 --port 8000 --reload"]



# Volumes for persistent data
volumes:
  postgres_data:
    driver: local

# Networks
networks:
  app-network:
    driver: bridge 